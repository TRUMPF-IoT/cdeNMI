/*
 * Copyright (c) 2009-2022 TRUMPF Laser GmbH, authors: C-Labs
 *
 * SPDX-License-Identifier: CC0-1.0
 */
function BigInteger(n, t, i) { n != null && ("number" == typeof n ? this.fromNumber(n, t, i) : t == null && "string" != typeof n ? this.fromString(n, 256) : this.fromString(n, t)) } function nbi() { return new BigInteger(null, null, null) } function am1(n, t, i, r, u, f) { while (--f >= 0) { var e = t * this[n++] + i[r] + u; u = Math.floor(e / 67108864); i[r++] = e & 67108863 } return u } function am2(n, t, i, r, u, f) { for (var o = t & 32767, s = t >> 15; --f >= 0;){ var e = this[n] & 32767, h = this[n++] >> 15, c = s * e + h * o; e = o * e + ((c & 32767) << 15) + i[r] + (u & 1073741823); u = (e >>> 30) + (c >>> 15) + s * h + (u >>> 30); i[r++] = e & 1073741823 } return u } function am3(n, t, i, r, u, f) { for (var o = t & 16383, s = t >> 14; --f >= 0;){ var e = this[n] & 16383, h = this[n++] >> 14, c = s * e + h * o; e = o * e + ((c & 16383) << 14) + i[r] + u; u = (e >> 28) + (c >> 14) + s * h; i[r++] = e & 268435455 } return u } function int2char(n) { return BI_RM.charAt(n) } function intAt(n, t) { var i = BI_RC[n.charCodeAt(t)]; return i == null ? -1 : i } function bnpCopyTo(n) { for (var t = this.t - 1; t >= 0; --t)n[t] = this[t]; n.t = this.t; n.s = this.s } function bnpFromInt(n) { this.t = 1; this.s = n < 0 ? -1 : 0; n > 0 ? this[0] = n : n < -1 ? this[0] = n + DV : this.t = 0 } function nbv(n) { var t = nbi(); return t.fromInt(n), t } function bnpFromString(n, t) { var r, u; if (t == 16) r = 4; else if (t == 8) r = 3; else if (t == 256) r = 8; else if (t == 2) r = 1; else if (t == 32) r = 5; else if (t == 4) r = 2; else { this.fromRadix(n, t); return } this.t = 0; this.s = 0; for (var f = n.length, e = !1, i = 0; --f >= 0;){ if (u = r == 8 ? n[f] & 255 : intAt(n, f), u < 0) { n.charAt(f) == "-" && (e = !0); continue } e = !1; i == 0 ? this[this.t++] = u : i + r > this.DB ? (this[this.t - 1] |= (u & (1 << this.DB - i) - 1) << i, this[this.t++] = u >> this.DB - i) : this[this.t - 1] |= u << i; i += r; i >= this.DB && (i -= this.DB) } r == 8 && (n[0] & 128) != 0 && (this.s = -1, i > 0 && (this[this.t - 1] |= (1 << this.DB - i) - 1 << i)); this.clamp(); e && BigInteger.prototype.ZERO.subTo(this, this) } function bnpClamp() { for (var n = this.s & this.DM; this.t > 0 && this[this.t - 1] == n;)--this.t } function bnToString(n) { var t; if (this.s < 0) return "-" + this.negate().toString(n); if (n == 16) t = 4; else if (n == 8) t = 3; else if (n == 2) t = 1; else if (n == 32) t = 5; else if (n == 4) t = 2; else return this.toRadix(n); var o = (1 << t) - 1, u, f = !1, e = "", r = this.t, i = this.DB - r * this.DB % t; if (r-- > 0) for (i < this.DB && (u = this[r] >> i) > 0 && (f = !0, e = int2char(u)); r >= 0;)i < t ? u = (this[r] & (1 << i) - 1) << t - i | this[--r] >> (i += this.DB - t) : (u = this[r] >> (i -= t) & o, i <= 0 && (i += this.DB, --r)), u > 0 && (f = !0), f && (e += int2char(u)); return f ? e : "0" } function bnNegate() { var n = nbi(); return BigInteger.prototype.ZERO.subTo(this, n), n } function bnAbs() { return this.s < 0 ? this.negate() : this } function bnCompareTo(n) { var t = this.s - n.s, i; if (t != 0 || (i = this.t, t = i - n.t, t != 0)) return t; while (--i >= 0) if ((t = this[i] - n[i]) != 0) return t; return 0 } function nbits(n) { var i = 1, t; return (t = n >>> 16) != 0 && (n = t, i += 16), (t = n >> 8) != 0 && (n = t, i += 8), (t = n >> 4) != 0 && (n = t, i += 4), (t = n >> 2) != 0 && (n = t, i += 2), (t = n >> 1) != 0 && (n = t, i += 1), i } function bnBitLength() { return this.t <= 0 ? 0 : this.DB * (this.t - 1) + nbits(this[this.t - 1] ^ this.s & this.DM) } function bnpDLShiftTo(n, t) { for (var i = this.t - 1; i >= 0; --i)t[i + n] = this[i]; for (i = n - 1; i >= 0; --i)t[i] = 0; t.t = this.t + n; t.s = this.s } function bnpDRShiftTo(n, t) { for (var i = n; i < this.t; ++i)t[i - n] = this[i]; t.t = Math.max(this.t - n, 0); t.s = this.s } function bnpLShiftTo(n, t) { for (var u = n % this.DB, e = this.DB - u, o = (1 << e) - 1, r = Math.floor(n / this.DB), f = this.s << u & this.DM, i = this.t - 1; i >= 0; --i)t[i + r + 1] = this[i] >> e | f, f = (this[i] & o) << u; for (i = r - 1; i >= 0; --i)t[i] = 0; t[r] = f; t.t = this.t + r + 1; t.s = this.s; t.clamp() } function bnpRShiftTo(n, t) { var i, r; if (t.s = this.s, i = Math.floor(n / this.DB), i >= this.t) { t.t = 0; return } var u = n % this.DB, f = this.DB - u, e = (1 << u) - 1; for (t[0] = this[i] >> u, r = i + 1; r < this.t; ++r)t[r - i - 1] |= (this[r] & e) << f, t[r - i] = this[r] >> u; u > 0 && (t[this.t - i - 1] |= (this.s & e) << f); t.t = this.t - i; t.clamp() } function bnpSubTo(n, t) { for (var r = 0, i = 0, u = Math.min(n.t, this.t); r < u;)i += this[r] - n[r], t[r++] = i & this.DM, i >>= this.DB; if (n.t < this.t) { for (i -= n.s; r < this.t;)i += this[r], t[r++] = i & this.DM, i >>= this.DB; i += this.s } else { for (i += this.s; r < n.t;)i -= n[r], t[r++] = i & this.DM, i >>= this.DB; i -= n.s } t.s = i < 0 ? -1 : 0; i < -1 ? t[r++] = this.DV + i : i > 0 && (t[r++] = i); t.t = r; t.clamp() } function bnpMultiplyTo(n, t) { var r = this.abs(), u = n.abs(), i = r.t; for (t.t = i + u.t; --i >= 0;)t[i] = 0; for (i = 0; i < u.t; ++i)t[i + r.t] = r.am(0, u[i], t, i, 0, r.t); t.s = 0; t.clamp(); this.s != n.s && BigInteger.prototype.ZERO.subTo(t, t) } function bnpSquareTo(n) { for (var i = this.abs(), t = n.t = 2 * i.t, r; --t >= 0;)n[t] = 0; for (t = 0; t < i.t - 1; ++t)r = i.am(t, i[t], n, 2 * t, 0, 1), (n[t + i.t] += i.am(t + 1, 2 * i[t], n, 2 * t + 1, r, i.t - t - 1)) >= i.DV && (n[t + i.t] -= i.DV, n[t + i.t + 1] = 1); n.t > 0 && (n[n.t - 1] += i.am(t, i[t], n, 2 * t, 0, 1)); n.s = 0; n.clamp() } function bnpDivRemTo(n, t, i) { var e = n.abs(), h, u, c, a; if (!(e.t <= 0)) { if (h = this.abs(), h.t < e.t) { t != null && t.fromInt(0); i != null && this.copyTo(i); return } i == null && (i = nbi()); var r = nbi(), v = this.s, p = n.s, s = this.DB - nbits(e[e.t - 1]); if (s > 0 ? (e.lShiftTo(s, r), h.lShiftTo(s, i)) : (e.copyTo(r), h.copyTo(i)), u = r.t, c = r[u - 1], c != 0) { var y = c * (1 << this.F1) + (u > 1 ? r[u - 2] >> this.F2 : 0), w = this.FV / y, b = (1 << this.F1) / y, k = 1 << this.F2, o = i.t, l = o - u, f = t == null ? nbi() : t; for (r.dlShiftTo(l, f), i.compareTo(f) >= 0 && (i[i.t++] = 1, i.subTo(f, i)), BigInteger.prototype.ONE.dlShiftTo(u, f), f.subTo(r, r); r.t < u;)r[r.t++] = 0; while (--l >= 0) if (a = i[--o] == c ? this.DM : Math.floor(i[o] * w + (i[o - 1] + k) * b), (i[o] += r.am(0, a, i, l, 0, u)) < a) for (r.dlShiftTo(l, f), i.subTo(f, i); i[o] < --a;)i.subTo(f, i); t != null && (i.drShiftTo(u, t), v != p && BigInteger.prototype.ZERO.subTo(t, t)); i.t = u; i.clamp(); s > 0 && i.rShiftTo(s, i); v < 0 && BigInteger.prototype.ZERO.subTo(i, i) } } } function bnMod(n) { var t = nbi(); return this.abs().divRemTo(n, null, t), this.s < 0 && t.compareTo(BigInteger.prototype.ZERO) > 0 && n.subTo(t, t), t } function Classic(n) { this.m = n } function cConvert(n) { return n.s < 0 || n.compareTo(this.m) >= 0 ? n.mod(this.m) : n } function cRevert(n) { return n } function cReduce(n) { n.divRemTo(this.m, null, n) } function cMulTo(n, t, i) { n.multiplyTo(t, i); this.reduce(i) } function cSqrTo(n, t) { n.squareTo(t); this.reduce(t) } function bnpInvDigit() { var t, n; return this.t < 1 ? 0 : (t = this[0], (t & 1) == 0) ? 0 : (n = t & 3, n = n * (2 - (t & 15) * n) & 15, n = n * (2 - (t & 255) * n) & 255, n = n * (2 - ((t & 65535) * n & 65535)) & 65535, n = n * (2 - t * n % this.DV) % this.DV, n > 0 ? this.DV - n : -n) } function Montgomery(n) { this.m = n; this.mp = n.invDigit(); this.mpl = this.mp & 32767; this.mph = this.mp >> 15; this.um = (1 << n.DB - 15) - 1; this.mt2 = 2 * n.t } function montConvert(n) { var t = nbi(); return n.abs().dlShiftTo(this.m.t, t), t.divRemTo(this.m, null, t), n.s < 0 && t.compareTo(BigInteger.prototype.ZERO) > 0 && this.m.subTo(t, t), t } function montRevert(n) { var t = nbi(); return n.copyTo(t), this.reduce(t), t } function montReduce(n) { for (var i, t, r; n.t <= this.mt2;)n[n.t++] = 0; for (i = 0; i < this.m.t; ++i)for (t = n[i] & 32767, r = t * this.mpl + ((t * this.mph + (n[i] >> 15) * this.mpl & this.um) << 15) & n.DM, t = i + this.m.t, n[t] += this.m.am(0, r, n, i, 0, this.m.t); n[t] >= n.DV;)n[t] -= n.DV, n[++t]++; n.clamp(); n.drShiftTo(this.m.t, n); n.compareTo(this.m) >= 0 && n.subTo(this.m, n) } function montSqrTo(n, t) { n.squareTo(t); this.reduce(t) } function montMulTo(n, t, i) { n.multiplyTo(t, i); this.reduce(i) } function bnpIsEven() { return (this.t > 0 ? this[0] & 1 : this.s) == 0 } function bnpExp(n, t) { var e; if (n > 4294967295 || n < 1) return BigInteger.prototype.ONE; var i = nbi(), r = nbi(), u = t.convert(this), f = nbits(n) - 1; for (u.copyTo(i); --f >= 0;)t.sqrTo(i, r), (n & 1 << f) > 0 ? t.mulTo(r, u, i) : (e = i, i = r, r = e); return t.revert(i) } function bnModPowInt(n, t) { var i; return i = n < 256 || t.isEven() ? new Classic(t) : new Montgomery(t), this.exp(n, i) } function Arcfour() { this.i = 0; this.j = 0; this.S = [] } function ARC4init(n) { for (var i, r, t = 0; t < 256; ++t)this.S[t] = t; for (i = 0, t = 0; t < 256; ++t)i = i + this.S[t] + n[t % n.length] & 255, r = this.S[t], this.S[t] = this.S[i], this.S[i] = r; this.i = 0; this.j = 0 } function ARC4next() { var n; return this.i = this.i + 1 & 255, this.j = this.j + this.S[this.i] & 255, n = this.S[this.i], this.S[this.i] = this.S[this.j], this.S[this.j] = n, this.S[n + this.S[this.i] & 255] } function prng_newstate() { return new Arcfour } function rng_seed_int(n) { rng_pool[rng_pptr++] ^= n & 255; rng_pool[rng_pptr++] ^= n >> 8 & 255; rng_pool[rng_pptr++] ^= n >> 16 & 255; rng_pool[rng_pptr++] ^= n >> 24 & 255; rng_pptr >= rng_psize && (rng_pptr -= rng_psize) } function rng_seed_time() { rng_seed_int((new Date).getTime()) } function rng_get_byte() { if (rng_state == null) { for (rng_seed_time(), rng_state = prng_newstate(), rng_state.init(rng_pool), rng_pptr = 0; rng_pptr < rng_pool.length; ++rng_pptr)rng_pool[rng_pptr] = 0; rng_pptr = 0 } return rng_state.next() } function rng_get_bytes(n) { for (var t = 0; t < n.length; ++t)n[t] = rng_get_byte() } function SecureRandom() { } function parseBigInt(n, t) { return new BigInteger(n, t, null) } function linebrk(n, t) { for (var r = "", i = 0; i + t < n.length;)r += n.substring(i, i + t) + "\n", i += t; return r + n.substring(i, n.length) } function byte2Hex(n) { return n < 16 ? "0" + n.toString(16) : n.toString(16) } function pkcs1pad2(n, t) { var i, f, r, e, u; if (t < n.length + 11) return null; for (i = [], f = n.length - 1; f >= 0 && t > 0;)r = n.charCodeAt(f--), r < 128 ? i[--t] = r : r > 127 && r < 2048 ? (i[--t] = r & 63 | 128, i[--t] = r >> 6 | 192) : (i[--t] = r & 63 | 128, i[--t] = r >> 6 & 63 | 128, i[--t] = r >> 12 | 224); for (i[--t] = 0, e = new SecureRandom, u = []; t > 2;){ for (u[0] = 0; u[0] == 0;)e.nextBytes(u); i[--t] = u[0] } return i[--t] = 2, i[--t] = 0, new BigInteger(i, null, null) } function RSAKey() { this.n = null; this.e = 0; this.d = null; this.p = null; this.q = null; this.dmp1 = null; this.dmq1 = null; this.coeff = null } function RSASetPublic(n, t) { n != null && t != null && n.length > 0 && t.length > 0 && (this.n = parseBigInt(n, 16), this.e = parseInt(t, 16)) } function RSADoPublic(n) { return n.modPowInt(this.e, this.n) } function RSAEncrypt(n) { var r = pkcs1pad2(n, this.n.bitLength() + 7 >> 3), i, t; return r == null ? null : (i = this.doPublic(r), i == null) ? null : (t = i.toString(16), (t.length & 1) == 0 ? t : "0" + t) } var __spreadArray = this && this.__spreadArray || function (n, t, i) { if (i || arguments.length === 2) for (var r = 0, f = t.length, u; r < f; r++)!u && r in t || (u || (u = Array.prototype.slice.call(t, 0, r)), u[r] = t[r]); return n.concat(u || Array.prototype.slice.call(t)) }, dbits, canary = 0xdeadbeefcafe, j_lm = (canary & 16777215) == 15715070, BI_FP, BI_RM, BI_RC, rr, vv, DV, rng_psize, rng_state, rng_pool, rng_pptr, t, MyWorkerContext, cde, MyWorker; for (BigInteger.prototype.am = am3, dbits = 28, BigInteger.prototype.DB = dbits, BigInteger.prototype.DM = (1 << dbits) - 1, BigInteger.prototype.DV = 1 << dbits, BI_FP = 52, BigInteger.prototype.FV = Math.pow(2, BI_FP), BigInteger.prototype.F1 = BI_FP - dbits, BigInteger.prototype.F2 = 2 * dbits - BI_FP, BI_RM = "0123456789abcdefghijklmnopqrstuvwxyz", BI_RC = [], rr = "0".charCodeAt(0), vv = 0; vv <= 9; ++vv)BI_RC[rr++] = vv; for (rr = "a".charCodeAt(0), vv = 10; vv < 36; ++vv)BI_RC[rr++] = vv; for (rr = "A".charCodeAt(0), vv = 10; vv < 36; ++vv)BI_RC[rr++] = vv; if (Classic.prototype.convert = cConvert, Classic.prototype.revert = cRevert, Classic.prototype.reduce = cReduce, Classic.prototype.mulTo = cMulTo, Classic.prototype.sqrTo = cSqrTo, Montgomery.prototype.convert = montConvert, Montgomery.prototype.revert = montRevert, Montgomery.prototype.reduce = montReduce, Montgomery.prototype.mulTo = montMulTo, Montgomery.prototype.sqrTo = montSqrTo, BigInteger.prototype.copyTo = bnpCopyTo, BigInteger.prototype.fromInt = bnpFromInt, BigInteger.prototype.fromString = bnpFromString, BigInteger.prototype.clamp = bnpClamp, BigInteger.prototype.dlShiftTo = bnpDLShiftTo, BigInteger.prototype.drShiftTo = bnpDRShiftTo, BigInteger.prototype.lShiftTo = bnpLShiftTo, BigInteger.prototype.rShiftTo = bnpRShiftTo, BigInteger.prototype.subTo = bnpSubTo, BigInteger.prototype.multiplyTo = bnpMultiplyTo, BigInteger.prototype.squareTo = bnpSquareTo, BigInteger.prototype.divRemTo = bnpDivRemTo, BigInteger.prototype.invDigit = bnpInvDigit, BigInteger.prototype.isEven = bnpIsEven, BigInteger.prototype.exp = bnpExp, BigInteger.prototype.toString = bnToString, BigInteger.prototype.negate = bnNegate, BigInteger.prototype.abs = bnAbs, BigInteger.prototype.compareTo = bnCompareTo, BigInteger.prototype.bitLength = bnBitLength, BigInteger.prototype.mod = bnMod, BigInteger.prototype.modPowInt = bnModPowInt, BigInteger.prototype.ZERO = nbv(0), BigInteger.prototype.ONE = nbv(1), Arcfour.prototype.init = ARC4init, Arcfour.prototype.next = ARC4next, rng_psize = 256, rng_pool == null) { for (rng_pool = [], rng_pptr = 0; rng_pptr < rng_psize;)t = Math.floor(65536 * Math.random()), rng_pool[rng_pptr++] = t >>> 8, rng_pool[rng_pptr++] = t & 255; rng_pptr = 0; rng_seed_time() } SecureRandom.prototype.nextBytes = rng_get_bytes; RSAKey.prototype.doPublic = RSADoPublic; RSAKey.prototype.setPublic = RSASetPublic; RSAKey.prototype.encrypt = RSAEncrypt; MyWorkerContext = self, function (n) { function y(n) { if (isNaN(n) || !n) return 0; var t = 0; try { t = parseInt(n) } catch (i) { } return isNaN(t) ? 0 : t } function p(n) { if (isNaN(n) || !n) return 0; var t = 0; try { t = parseFloat(n) } catch (i) { } return isNaN(t) ? 0 : t } function w(n) { if (this.IsNotSet(n)) return !1; if (typeof n == "boolean") return n; switch (n.toString().toLowerCase()) { case "true": case "yes": case "1": case "on": return !0; default: return !1 } } function b(n) { return n === undefined || n === null || n === "" } function k(n, t, i) { for (var u = 0, r = 0; u < i && r !== -1;)r = n.indexOf(t, r + t.length), u++; return r } function d(n) { var r = n.getMonth() + 1, u = n.getDate(), f = n.getFullYear(), t = n.getHours(), e = n.getMinutes(), i = "AM"; return t > 11 && (i = "PM"), r + "/" + u + "/" + f + " " + t + ":" + e + " " + i } var u, f, t, e, o, s, h, c, l, a, v, i, r; n.CInt = y; n.CDbl = p; n.CBool = w; n.IsNotSet = b; n.GetSubstringIndex = k; n.DateToString = d; u = function () { function n(n, t, i) { this.ENG = n; this.JMSG = JSON.stringify(i); this.TOPIC = t } return n }(); n.TheCoreQueueContent = u; f = function () { function n() { } return n }(); n.TheISBConnect = f; t = function () { function n() { this.HeartBeat = 30; this.PickupRate = 250; this.InitRate = 100; this.HeartBeatMissed = 4; this.PickupRateDelay = 1; this.WsTimeOut = 5e3 } return n.prototype.EnterAdrenalin = function () { this.HeartBeat = 5; this.HeartBeatMissed = 30 }, n.prototype.NormalHeartRate = function () { this.HeartBeat = 30; this.HeartBeatMissed = 4 }, n.prototype.EnterSleepMode = function () { this.HeartBeat = 100; this.HeartBeatMissed = 3 }, n }(); n.TheTimeouts = t; e = function () { function n(n) { this.ENG = n; this.TIM = new Date; this.ORG = ""; this.FID = r.MsgSendCounter++; this.PLB = null; this.QDX = 5; this.LVL = 4; this.CST = ""; this.UID = ""; this.OWN = ""; this.GRO = "" } return n.GetOriginator = function (n) { if (!n.ORG) return ""; var t = n.ORG.split(";"); return t[0] }, n }(); n.TSM = e; o = function () { function n(n, t) { this.Topic = n; this.Message = t } return n }(); n.TheProcessMessage = o; s = function () { function n() { } return n }(); n.TheDeviceMessage = s; h = function () { function n() { this.QUID = ""; this.QPWD = ""; this.QToken = null } return n }(); n.TheCDECredentials = h; c = function () { function n() { } return n }(); n.TheMeshPicker = c; l = function () { function n() { this.CurrentUserName = null; this.PortalScreen = null; this.StartScreen = null; this.HideHeader = !1 } return n }(); n.TheUserPreferences = l; a = function () { function n() { } return n }(); n.TheNV = a; v = function () { function n(n) { this.NoISB = !1; this.DisableRSA = !1; this.RequestPath = null; this.KeepSessionAlive = !1; this.port = 80; this.host = null; this.Creds = null; this.useTLS = !1; this.cdeTIM = new Date; this.IsWSHBDisabled = !1; this.TO = new t; n > 0 && (this.TO.WsTimeOut = n) } return n }(); n.TheCommConfig = v; i = function () { function n() { this.CurrentRSA = null; this.IsConnected = !1; this.CallerCount = 0; this.InitialNPA = null; this.HasAutoLogin = !1; this.FirstNodeID = ""; this.AdminPWMustBeSet = !1; this.AdminRole = null; this.LastPortalScreen = null; this.LastStartScreen = null; this.MyServiceUrl = ""; this.IsUserLoggedIn = !1 } return n }(); n.TheWHSI = i; r = function () { function t(n) { this.DCreds = null; this.MyConfig = null; this.MyHSI = new i; this.NMIVersion = 4; this.MyStationID = ""; this.IsPosting = !1; this.IsRetrying = !1; this.MyWebSockets = null; this.MyFallbackServiceUrl = ""; this.IsWSConnected = !1; this.IsConnectionDown = !1; this.UsesWebSockets = !1; this.mLoginSent = !1; this.HasStarted = !1; this.TriesTokenLogin = !1; this.HealthCounter = 0; this.HBCounter = 0; this.DeadCounter = 0; this.Pre4209SID = null; this.MyCoreQueue = []; this.MyPorts = []; n && this.AddPort(n) } return Object.defineProperty(t.prototype, "IsConnected", { get: function () { return this.MyHSI.IsConnected }, set: function (n) { this.MyHSI.IsConnected !== n && (this.MyHSI.IsConnected = n, this.UpdateHSI(), this.FireEvent(!0, "CDE_CONN_CHANGED", n)) }, enumerable: !1, configurable: !0 }), t.prototype.UpdateHSI = function () { this.MyHSI.HasAutoLogin = this.MyConfig && this.MyConfig.Creds !== null; this.MyHSI.CallerCount = this.MyPorts.length; this.WriteToIDB() }, t.prototype.SetTargetRelay = function (t) { var r, u, i, f; if (!this.MyHSI.IsConnected) { try { return r = t.split(";:;"), u = null, u = new URL(r[0]), i = this.MyConfig, i === null && (i = new n.TheCommConfig(0)), i.host = u.hostname, i.cdeTIM = new Date, i.port = n.CInt(u.port), u.protocol.indexOf("s:", u.protocol.length - 2) !== -1 ? (i.useTLS = !0, i.port === 0 && (i.port = 443)) : i.port === 0 && (i.port = 80), r.length > 1 && (i.Creds = new n.TheCDECredentials, i.Creds.QUID = r[1], r.length > 2 && (i.Creds.QPWD = r[2])), this.SetConfig(i), this.FireEvent(!0, "CDE_NEW_LOGENTRY", "cdeWebComm:SetTargetRelay", "Config was set", 1), !0 } catch (e) { f = r[0] + " is not a valid Url"; this.FireEvent(!0, "CDE_NEW_LOGENTRY", "cdeWebComm:SetTargetRelay", f, 2); this.FireEvent(!0, "CDE_SETSTATUSMSG", f, 2) } return !1 } }, t.prototype.SetConfig = function (t) { this.MyHSI.IsConnected || (this.MyConfig = t, this.MyConfig) && (this.MyConfig.RequestPath && !this.MyHSI.InitialNPA && (this.MyHSI.InitialNPA = this.MyConfig.RequestPath), this.MyConfig.cdeTIM || (this.MyConfig.cdeTIM = new Date), this.MyConfig.TO || (this.MyConfig.TO = new n.TheTimeouts), !this.MyConfig.host && this.MyConfig.uri && this.SetTargetRelay(this.MyConfig.uri)) }, t.prototype.StartCommunication = function (n) { var t = this, i; if (this.MyHSI.IsConnected || this.HasStarted) { this.MyHSI.IsConnected && this.HasStarted && this.FireEvent(!0, "CDE_CONN_CHANGED", !0); return } this.IsConnectionDown = !1; this.MyDB ? this.StartCommPhase2(n) : (i = indexedDB.open("cdeDB", 1), i.onupgradeneeded = function (i) { t.FireEvent(!0, "CDE_NEW_LOGENTRY", "IndexedDB:message", "In Upgrade Needed", 1); t.MyDB = i.target.result; t.MyDB.objectStoreNames.contains("CDEJS") || t.MyDB.createObjectStore("CDEJS", { keyPath: "id" }); t.StartCommPhase2(n) }, i.onsuccess = function (i) { t.FireEvent(!0, "CDE_NEW_LOGENTRY", "IndexedDB:message", "Open Success", 1); t.MyDB = i.target.result; var u = t.MyDB.transaction(["CDEJS"]), f = u.objectStore("CDEJS"), r = f.get(1); r.onerror = function () { t.FireEvent(!0, "CDE_NEW_LOGENTRY", "IndexedDB:message", "Read of Idx1 failed", 3); t.StartCommPhase2(n) }; r.onsuccess = function () { if (t.FireEvent(!0, "CDE_NEW_LOGENTRY", "IndexedDB:message", "Read Success", 1), r.result) { var i = r.result.config; i.Creds && i.Creds.QToken && i.Creds.QToken !== "" ? (n && n.RequestPath && (i.RequestPath = n.RequestPath, t.MyHSI.InitialNPA || (t.MyHSI.InitialNPA = n.RequestPath)), n = i, t.FireEvent(!0, "CDE_NEW_LOGENTRY", "IndexedDB:message", "State Restored", 1)) : (t.FireEvent(!0, "CDE_NEW_LOGENTRY", "IndexedDB:message", "State ignored", 1), t.DeleteFromIDB()); t.StartCommPhase2(n) } else t.FireEvent(!0, "CDE_NEW_LOGENTRY", "IndexedDB:message", "No data record", 2), t.StartCommPhase2(n) } }, i.onerror = function (i) { t.FireEvent(!0, "CDE_NEW_LOGENTRY", "IndexedDB:error", "Error:" + i, 3); t.StartCommPhase2(n) }) }, t.prototype.StartCommPhase2 = function (t) { var i = this, r, u; t && this.SetConfig(t); this.MyConfig && n.CBool(this.MyConfig.NoISB) === !1 && (this.HasStarted = !0, r = "http", this.MyConfig.useTLS === !0 && (r += "s"), this.MyHSI.MyServiceUrl = "".concat(r, "://").concat(this.MyConfig.host, ":").concat(this.MyConfig.port), u = "".concat(this.MyHSI.MyServiceUrl, "/MYISBCONNECT"), this.GetGlobalResource(u, null, function (t, r) { var u = JSON.parse(r), f; u.ERR ? (i.FireEvent(!0, "CDE_NEW_LOGENTRY", "cdeWebComm:StartCommunication", "MyISBConnect returned: " + u.ERR, 3), i.FireEvent(!0, "CDE_NO_CONNECT", "ISBConnect returned " + u.ERR + ". Verify ISBConnect is allow on relay.")) : (u.WSP > 0 && (f = "ws", u.TLS === !0 && (f += "s"), i.MyConfig.wsuri = "".concat(f, "://").concat(i.MyConfig.host, ":").concat(u.WSP)), f = "http", u.TLS === !0 && (f += "s"), i.MyFallbackServiceUrl = "".concat(f, "://").concat(i.MyConfig.host, ":").concat(i.MyConfig.port), i.MyConfig.RequestPath = u.NPA, i.MyHSI.InitialNPA = u.NPA, i.MyHSI.FirstNodeID = u.FNI, u.ADR && (i.MyHSI.AdminPWMustBeSet = !0, i.MyHSI.AdminRole = u.ADR), i.NMIVersion = n.CDbl(u.VER) > 4 ? n.CDbl(u.VER) : 4, i.DoStartComm()) }, function (n, t) { i.FireEvent(!0, "CDE_NEW_LOGENTRY", "cdeWebComm:StartCommunication", "MyISBConnect failed! :" + t, 3); i.FireEvent(!0, "CDE_NO_CONNECT", "ISBConnect failed. Verify ISBConnect is allow on relay.") })); this.HasStarted || (this.HasStarted = !0, this.DoStartComm()) }, t.prototype.DoStartComm = function () { var t = this, i = !1, r; this.MyConfig.TO || (this.MyConfig.TO = new n.TheTimeouts); r = this.StartupWS(); this.FireEvent(!0, "CDE_NEW_LOGENTRY", "cdeWebComm:DoStartComm", "Connect in final stage HB monitoring: " + r); this.MyHeartBeatMonitor = setInterval(function () { if (!i && !t.IsConnectionDown) { if (i = !0, t.HealthCounter++, (!t.UsesWebSockets || !t.MyConfig.IsWSHBDisabled) && t.HealthCounter % t.MyConfig.TO.HeartBeat == 0 && (t.MyCoreQueue.length === 0 && t.PickupNextMessage(), !t.UsesWebSockets)) if (t.IsConnected) t.HBCounter++ > t.MyConfig.TO.HeartBeatMissed && (t.IsConnected = !1, t.IsPosting = !1, t.HBCounter = 0); else if (t.DeadCounter++ > t.MyConfig.TO.HeartBeatMissed * 3) { var r = n.DateToString(new Date) + ": Connection Lost because Service is down or unreachable. Click ok to reload this page"; t.FireEvent(!0, "CDE_NEW_LOGENTRY", "cdeNode:StartCommunication", r, 3); t.EndSession(r) } (t.UsesWebSockets || t.HealthCounter % t.MyConfig.TO.PickupRateDelay == 0 || t.MyCoreQueue.length > 0) && t.SendNextMessage(null); i = !1 } }, this.MyConfig.TO.PickupRate); this.FireEvent(!0, "CDE_COMM_STARTED", null) }, t.prototype.SendTSM = function (t, i, r, u) { if (!(this.MyCoreQueue.length > 0) || i !== "CDE_PICKUP" && i) { (t.FLG & 4096) != 0 && (t.PLS = this.RSAEncrypt(t.PLS)); t.ORG = this.MyStationID + (u ? ":" + u : ""); r && r !== "" ? (i = "CDE_SYSTEMWIDE", this.Pre4209SID && this.Pre4209SID !== "" && (i += "@" + this.Pre4209SID), i += ";" + r) : i !== "" && this.Pre4209SID && this.Pre4209SID !== "" && (i += "@" + this.Pre4209SID); t.SID = this.Pre4209SID; var f = new n.TheDeviceMessage; f.TOP = i ? i : t.ENG; f.MSG = t; this.MyCoreQueue.push(f) } }, t.prototype.SendQueued = function (t, i, r, u, f, e, o, s, h, c, l) { var a, v; r && (this.MyCoreQueue.length > 0 && (i === "CDE_PICKUP" || !i) || (a = new n.TSM(r), h && h !== "" ? (i = "CDE_SYSTEMWIDE", this.Pre4209SID && this.Pre4209SID !== "" && (i += "@" + this.Pre4209SID), i += ";" + h) : i !== "" && this.Pre4209SID && this.Pre4209SID !== "" && (i += "@" + this.Pre4209SID), a.SID = this.Pre4209SID, a.OWN = t, a.FLG = e, a.LVL = s, a.TXT = u, c && (a.GRO = c), a.PLS = (e & 4096) != 0 ? this.RSAEncrypt(f) : f, a.QDX = o, a.ORG = this.MyStationID + (l ? ":" + l : ""), v = new n.TheDeviceMessage, v.TOP = i, v.MSG = a, this.MyCoreQueue.push(v))) }, t.prototype.Login = function (t) { var i; this.mLoginSent !== !0 && t && (this.MyConfig || (this.MyConfig = new n.TheCommConfig(0)), this.MyHSI.CurrentRSA || this.MyConfig.DisableRSA ? (this.DCreds && (this.DCreds.QUID && this.DCreds.QPWD || this.DCreds.QToken) && (t.QToken = this.DCreds.QToken, t.QUID = this.DCreds.QUID, t.QPWD = this.DCreds.QPWD), this.DCreds = null, this.FireEvent(!0, "CDE_SETSTATUSMSG", "Sending credentials to Relay...", 1), t.QToken && t.QToken !== "" ? (this.TriesTokenLogin = !0, this.SendQueued(null, "CDE_TLOGIN" + t.QToken, "ContentService", null, null, 1, 1, 1, null, null)) : t.QUID && t.QUID !== "" ? (i = this.RSAEncrypt("".concat(t.QUID, ":;:").concat(t.QPWD), this.MyHSI.CurrentRSA), this.SendQueued(null, "CDE_LOGIN" + i, "ContentService", null, null, 1, 1, 1, null, null)) : (i = this.RSAEncrypt(t.QPWD, this.MyHSI.CurrentRSA), this.SendQueued(null, "CDE_SETESID" + i, "ContentService", null, null, 1, 1, 1, null, null)), this.mLoginSent = !0, this.MyConfig.Creds = new n.TheCDECredentials) : (this.DCreds = new n.TheCDECredentials, this.DCreds.QUID = t.QUID, this.DCreds.QPWD = t.QPWD, this.DCreds.QToken = t.QToken, this.FireEvent(!0, "CDE_SETSTATUSMSG", "RSA not initialized, yet. Waiting for relay to provide...", 2))) }, t.prototype.SelectMesh = function (n) { this.SendQueued(null, "CDE_MESHSELECT:" + n, "ContentService", null, null, 1, 1, 1, null, null) }, t.prototype.PickupNextMessage = function () { var t = new n.TheDeviceMessage; t.TOP = ""; t.MSG = null; this.MyCoreQueue.push(t) }, t.prototype.SendNextMessage = function (t, i) { var r = this, f, u, e; if ((t || !this.IsPosting && this.MyCoreQueue.length !== 0) && (this.UsesWebSockets || this.MyConfig.RequestPath && this.MyConfig.RequestPath !== "" || i) && (!this.UsesWebSockets || this.IsWSConnected !== !1)) { f = function () { var e, o, s, h, f; if (u.IsPosting = !0, e = void 0, t) e = t.RQP; else { o = 0; s = []; do s[o] = u.MyCoreQueue.shift(), o++; while (u.MyCoreQueue.length > 0 && o < 10); t = new n.TheCoreQueueContent("", "", s); h = i ? i : u.MyConfig.RequestPath; e = u.MyFallbackServiceUrl + encodeURI(h); u.UsesWebSockets === !1 && e.substr(e.length - 5, 5) === ".ashx" && (e = e.substr(0, e.length - 5)); t.TOPIC !== "" && (e += "?" + encodeURI(t.TOPIC)); t.RQP = e; i = u.MyConfig.RequestPath; u.MyConfig.RequestPath = "" } if (u.WriteToIDB(), u.UsesWebSockets) u.MyWebSockets.send(t.JMSG), u.IsPosting = !1, t = null; else return fetch ? fetch(e, { method: "post", body: t.JMSG, mode: "cors", cache: "no-cache", redirect: "follow", referrer: "no-referrer", headers: { "Content-Type": "application/json; charset=utf-8" } }).then(function (n) { n.json().then(function (n) { var i = n, u, t; if (r.IsPosting = !1, u = !1, i.length > 0) for (t = 0; t < i.length; t++)i[t].CNT > 0 && (u = !0), r.IsPosting = !r.ProcessDeviceMessage(i[t], !1); u && r.SendNextMessage(null) }) }).catch(function (n) { r.PostError(t, n, i) }) : (f = new XMLHttpRequest, f.open("POST", e), f.setRequestHeader("Content-Type", "application/json"), f.onload = function () { var n, e, u, o; if (f.status === 200) try { if (n = JSON.parse(f.responseText), r.IsPosting = !1, e = !1, n.length > 0) for (u = 0; u < n.length; u++)n[u].CNT > 0 && (e = !0), r.IsPosting = !r.ProcessDeviceMessage(n[u], !1); e && r.SendNextMessage(null) } catch (s) { r.FireEvent(!0, "CDE_NEW_LOGENTRY", "cdeWebComm:SendNextMessage", "Message Parse Error:" + s); r.PostError(t, "parse failed", i) } else f.status !== 200 && (o = "Message returned: " + f.status + " msg:" + f.statusText, r.FireEvent(!0, "CDE_NEW_LOGENTRY", "cdeWebComm:SendNextMessage", o), r.PostError(t, o, i)) }, f.onerror = function () { var n = "Message returned: " + f.status + " msg:" + f.statusText; r.FireEvent(!0, "CDE_NEW_LOGENTRY", "cdeWebComm:xhrError", n); r.EndSession(n) }, f.send(t.JMSG)), "break" }; u = this; do if (e = f(), e === "break") break; while (this.MyCoreQueue.length > 0) } }, t.prototype.StartupWS = function () { var t = this, i; if (!this.MyConfig.wsuri) return !1; i = this.MyConfig.wsuri; this.FireEvent(!0, "CDE_NEW_LOGENTRY", "cdeWebComm:StartupWS", "WS connect to: " + i); i.indexOf(".ashx") < 0 && (i += encodeURI(this.MyConfig.RequestPath)); try { this.MyWebSockets = new WebSocket(i); this.MyConfig.TO.WsTimeOut > 0 && setInterval(function () { !t.IsWSConnected && t.UsesWebSockets && (t.UsesWebSockets = !1) }, this.MyConfig.TO.WsTimeOut) } catch (r) { return this.MyWebSockets = null, !1 } return this.MyWebSockets ? (this.UsesWebSockets = !0, this.MyWebSockets.onopen = function () { t.FireEvent(!0, "CDE_SETSTATUSMSG", "Connecting to WS...", 2); t.MyWebSockets.send('[{"MET":0,"TOP":"CDE_INITWS","CNT":0}]') }, this.MyWebSockets.onmessage = function (i) { var f, r, u, e; if (t.UsesWebSockets) { t.IsWSConnected = !0; try { if (i.data.substring(0, 1) !== "[") t.FireEvent(!0, "CDE_NEW_LOGENTRY", "cdeWebComm:OnMessage", "Strange Response from WServer:" + i.data); else if (f = !1, i.data.length > 5e5 && (t.FireEvent(!0, "CDE_NEW_LOGENTRY", "cdeWebComm:OnMessage", "Very large Telegram received:" + i.data.length), f = !0), r = JSON.parse(i.data), r && r.length > 0) for (u = 0; u < r.length; u++){ if (r[u].MSG || r[u].TOP === "") { if (e = r[u].TOP.split(";:;"), e[0] === "CDE_CONNECT" && t.MyConfig && t.MyConfig.Creds) { t.MyHSI.CurrentRSA = r[u].RSA; t.Login(t.MyConfig.Creds); continue } } else { t.FireEvent(!0, "CDE_NEW_LOGENTRY", "StartUpWS:onMessage", r[u].TOP); return } f && t.FireEvent(!0, "CDE_NEW_LOGENTRY", "cdeWebComm:OnMessage", "ORG:" + n.TSM.GetOriginator(r[u].MSG) + "TXT: " + r[u].MSG.TXT); t.ProcessDeviceMessage(r[u], !0) } } catch (o) { t.FireEvent(!0, "CDE_NEW_LOGENTRY", "cdeWebComm:StartWS", "Error during OnMessage:" + o) } } }, this.MyWebSockets.onclose = function () { var i; t.UsesWebSockets && (t.UsesWebSockets = !1, t.IsWSConnected ? (i = n.DateToString(new Date) + (t.mLoginSent ? " Relay refused login and closed connection" : " WS Communication was closed. You will need to login again"), t.FireEvent(!0, "CDE_SETSTATUSMSG", i, 3), t.FireEvent(!0, "CDE_NEW_LOGENTRY", "StartUpWS:onclose", i), t.EndSession(i)) : (i = n.DateToString(new Date) + (t.mLoginSent ? " a connection could not be established" : " WS Communication was closed. You will need to login again"), t.FireEvent(!0, "CDE_SETSTATUSMSG", i, 3), t.FireEvent(!0, "CDE_NEW_LOGENTRY", "StartUpWS:onclose", i), t.EndSession(i))) }, this.MyWebSockets.onerror = function () { if (t.UsesWebSockets && (t.UsesWebSockets = !1, t.IsWSConnected)) { var i = n.DateToString(new Date) + " WS Communication was interrupted. You will need to login again"; t.FireEvent(!0, "CDE_SETSTATUSMSG", i, 3); t.FireEvent(!0, "CDE_NEW_LOGENTRY", "StartUpWS:onerror", i); t.EndSession(i) } }, !0) : !1 }, t.prototype.EndSession = function (t) { n.CBool(this.IsConnectionDown) || (clearInterval(this.MyHeartBeatMonitor), this.IsConnectionDown = !0, this.IsConnected = !1, this.MyHSI = new n.TheWHSI, this.MyConfig = null, this.IsRetrying = !1, this.HasStarted = !1, this.DeleteFromIDB(), this.FireEvent(!0, "CDE_SESSION_ENDED", t)) }, t.prototype.PostError = function (t, i, r) { if (this.IsPosting = !1, this.IsRetrying || i !== "timeout") { t.ENG !== "" && this.FireEvent(!0, "CDE_ENGINE_GONE", t.ENG); var u = n.DateToString(new Date) + " Communication was lost.You will need to login again"; this.FireEvent(!0, "CDE_SETSTATUSMSG", u, 3); this.FireEvent(!0, "CDE_NEW_LOGENTRY", "PostError", u); this.EndSession(u) } else this.IsRetrying = !0, this.SendNextMessage(t, r) }, t.prototype.ProcessDeviceMessage = function (t, i) { var f, e, o, u, r, h, s, c, l; if (t.MSG && this.FireEvent(!0, "CDE_INCOMING_MSG", new n.TheProcessMessage(t.TOP.split(":,:")[0], t.MSG)), i || t.NPA) { if (f = !1, this.MyConfig.RequestPath = t.NPA, this.MyHSI.InitialNPA || (this.MyHSI.InitialNPA = t.NPA), t.RSA && t.RSA !== "" && !this.MyHSI.CurrentRSA && (this.MyHSI.CurrentRSA = t.RSA, this.MyHSI.FirstNodeID || (this.MyHSI.FirstNodeID = n.TSM.GetOriginator(t.MSG)), f = !0, this.DCreds && (this.Login(this.DCreds), this.DCreds = null)), this.DeadCounter = 0, t.DID && t.DID !== "" && !this.MyStationID && (this.MyStationID = t.DID, f = !0), e = this.IsConnected, o = !1, t.TOP === "ERR:CDE_LOGIN_FAILURE") this.MyHSI.IsUserLoggedIn = !1, this.mLoginSent = !1, this.MyConfig.Creds = null, this.FireEvent(!0, "CDE_LOGIN_EVENT", !1, "Relay rejected credentials", null), o = !0, f = !0, this.EndSession("Relay rejected credentials - Login failed"); else if (t.TOP === "ERR:CDE_MESHSELECT_FAILURE") this.MyHSI.IsUserLoggedIn = !1, this.mLoginSent = !1, this.MyConfig.Creds = null, this.FireEvent(!0, "CDE_LOGIN_EVENT", !1, "Mesh Picker failed", null), o = !0, f = !0, this.EndSession("Mesh Selection failed, please reload this page"); else if (t.TOP.length > 12 && (u = t.TOP.split(":"), !this.MyHSI.IsUserLoggedIn)) if (u[0] === "LOGIN_SUCCESS") { if (this.MyHSI.UserPref = new n.TheUserPreferences, r = null, u.length > 1 && (r = u[1].split(";"), r.length > 1 && (this.MyHSI.LastPortalScreen = r[1], r.length > 2 && (this.MyHSI.UserPref.HideHeader = n.CBool(r[2]))), n.IsNotSet(r[0]) || (this.MyHSI.LastStartScreen = r[0]), u.length > 2 && (this.MyHSI.UserPref.CurrentUserName = u[2], u.length > 3))) try { h = n.GetSubstringIndex(t.TOP, ":", 3); s = t.TOP.substr(h + 1); s.length > 2 && s.substr(0, 1) === "{" ? this.MyHSI.UserPref = JSON.parse(s) : this.MyHSI.UserPref.LCID = n.CInt(s) } catch (a) { this.FireEvent(!0, "CDE_NEW_LOGENTRY", "Login:Illegal User Preferences received") } this.MyConfig.LPS && (this.MyHSI.LastPortalScreen = this.MyConfig.LPS); this.MyConfig.LSSC && (this.MyHSI.LastStartScreen = this.MyConfig.LSSC); this.MyHSI.IsUserLoggedIn = !0; this.MyHSI.UserPref.ScreenParts = r; this.Pre4209SID = t.SID; t.SID && t.SID.substr(0, 2) === "UT" && (this.Pre4209SID = null, this.MyConfig.Creds = new n.TheCDECredentials, this.MyConfig.Creds.QToken = t.SID); this.FireEvent(!0, "CDE_LOGIN_EVENT", !0, "Login Successful!", this.MyHSI.UserPref); o = !0; f = !0; this.mLoginSent = !1 } else u[0] === "SELECT_MESH" && (c = t.TOP.substr(12), l = JSON.parse(c), this.FireEvent(!0, "CDE_SELECT_MESH", l)); if (!i && t.CNT > 0 && this.MyCoreQueue.length === 0 && this.PickupNextMessage(), e = !0, e !== this.IsConnected ? (e && !o && this.FireEvent(!0, "CDE_SETSTATUSMSG", "Connected to " + this.MyHSI.MyServiceUrl + " using " + (this.UsesWebSockets ? "WS" : "REST"), 1), this.IsConnected = e) : f === !0 && this.UpdateCallerHSI("ProcessMsgDirty"), !this.UsesWebSockets) return !0 } return !1 }, t.prototype.RSAEncrypt = function (n, t) { if (this.MyConfig.DisableRSA || (t && t.length !== 0 || (t = this.MyHSI.CurrentRSA), !t || t.length === 0)) return n; var i = t.split(","), r = new RSAKey; return r.setPublic(i[1], i[0]), r.encrypt(n) }, t.prototype.GetResourceStringAsync = function (n, t) { var i = this; this.GetGlobalResource("/ClientBin/" + n, t, function (n, t) { i.FireEvent(!0, "GRS_" + n, t) }, function (n, t) { i.FireEvent(!0, "GRS_ERROR_" + n, t) }) }, t.prototype.GetGlobalResourceAsync = function (n, t) { var i = this; this.GetGlobalResource(n, t, function (n, t) { i.FireEvent(!0, "GGR_" + n, t) }, function (n, t) { i.FireEvent(!0, "GGR_ERROR_" + n, t) }) }, t.prototype.GetJSONAsync = function (n, t) { var i = this; this.GetGlobalResource(n, t, function (n, t) { try { var r = JSON.parse(t); i.FireEvent(!0, "GJ_" + n, r) } catch (u) { i.FireEvent(!0, "GJ_ERROR_" + n, u) } }, function (n, t) { i.FireEvent(!0, "GJ_ERROR_" + n, t) }) }, t.prototype.GetGlobalResource = function (n, t, i, r) { var s, u, o, h, e, f; if (fetch) { if (s = new Headers, t) for (o = t.split(";:;"), e = 0; e < o.length; e++)f = o[e].split("="), f.length > 1 && s.append(f[0], f[1]); fetch(n, { headers: s, cache: "no-store" }).then(function (t) { t.ok ? t.text().then(function (t) { i(n, t) }) : r && r(n, t.statusText) }).catch(function (t) { r && r(n, t) }) } else { if (u = new XMLHttpRequest, u.open("GET", n), u.responseType = "text", t) { for (o = t.split(";:;"), h = !1, e = 0; e < o.length; e++)f = o[e].split("="), f[0] === "Accept" && (h = !0), f.length > 1 && u.setRequestHeader(f[0], f[1]); h || u.setRequestHeader("Accept", "*/*") } u.onload = function () { u.status >= 200 && u.status < 400 ? i && i(n, u.responseText) : r && r(n, u.status + ":" + u.statusText) }; u.onerror = function () { r && r(n, u.status + ":" + u.statusText) }; u.send() } }, t.prototype.UpdateCustomSettings = function (n) { if (this.MyConfig) { for (var t in n) this.MyConfig[t] = n[t]; this.WriteToIDB() } }, t.prototype.OnMessage = function (t) { var i, r; try { if (i = t.data, i.length > 1) switch (i[0]) { case "SetTargetRelay": this.SetTargetRelay.apply(this, Array.prototype.slice.call(i, 1)); break; case "SetConfig": this.SetConfig.apply(this, Array.prototype.slice.call(i, 1)); break; case "StartCommunication": this.StartCommunication.apply(this, Array.prototype.slice.call(i, 1)); break; case "SendQueued": this.SendQueued.apply(this, Array.prototype.slice.call(i, 1)); break; case "UpdateCustomSettings": this.UpdateCustomSettings.apply(this, Array.prototype.slice.call(i, 1)); break; case "Subscribe": r = new n.TSM("ContentService"); r.TXT = "CDE_SUBSCRIBE"; r.PLS = i[1]; this.Pre4209SID && this.Pre4209SID !== "" && (r.PLS += "@" + this.Pre4209SID); this.SendTSM(r, null, this.MyHSI.FirstNodeID); break; case "Unsubscribe": r = new n.TSM("ContentService"); r.TXT = "CDE_UNSUBSCRIBE"; r.PLS = i[1]; this.Pre4209SID && this.Pre4209SID !== "" && (r.PLS += "@" + this.Pre4209SID); this.SendTSM(r, null, this.MyHSI.FirstNodeID); break; case "SendTSM": this.SendTSM.apply(this, Array.prototype.slice.call(i, 1)); break; case "SendToFirstNode": this.SendTSM(i[1], "CDE_SYSTEMWIDE", this.MyHSI.FirstNodeID); break; case "SendToOriginator": i.length > 2 && this.SendTSM(i[2], "CDE_SYSTEMWIDE", i[1].ORG); break; case "SendToNode": i.length > 2 && this.SendTSM(i[2], "CDE_SYSTEMWIDE", i[1]); break; case "Logout": this.EndSession(i[1]); break; case "GetWHSI": this.UpdateCallerHSI("GETWHSI"); break; case "Login": this.Login.apply(this, Array.prototype.slice.call(i, 1)); break; case "SelectMesh": this.SelectMesh.apply(this, Array.prototype.slice.call(i, 1)); break; case "GetJSON": this.GetJSONAsync.apply(this, Array.prototype.slice.call(i, 1)); break; case "GetResourceString": this.GetResourceStringAsync.apply(this, Array.prototype.slice.call(i, 1)); break; case "GetGlobalResource": this.GetGlobalResourceAsync.apply(this, Array.prototype.slice.call(i, 1)) } } catch (u) { this.FireEvent(!0, "CDE_NEW_LOGENTRY", "cdeWebWorker:OnMessage", u, 3) } }, t.prototype.FireEvent = function (n, t) { for (var r, u = [], i = 2; i < arguments.length; i++)u[i - 2] = arguments[i]; for (r = 0; r < this.MyPorts.length; r++)this.MyPorts[r].postMessage(__spreadArray([t, this.MyHSI], u, !0)) }, t.prototype.UpdateCallerHSI = function (n) { this.UpdateHSI(); this.FireEvent(!0, "CDE_NEW_LOGENTRY", "UpdateHSI", n, 1); this.FireEvent(!0, "CDE_UPDATE_HSI", n) }, t.prototype.AddPort = function (n) { this.MyPorts.push(n) }, t.prototype.WriteToIDB = function () { var t = this, n; if (!this.MyDB) { this.FireEvent(!0, "CDE_NEW_LOGENTRY", "IndexedDB:WriteToIDB", "IDB is not ready, yet", 3); return } this.MyConfig.cdeTIM = new Date; n = this.MyDB.transaction(["CDEJS"], "readwrite").objectStore("CDEJS").put({ id: 1, config: this.MyConfig }); n.onsuccess = function () { }; n.onerror = function () { t.FireEvent(!0, "CDE_NEW_LOGENTRY", "IndexedDB:WriteToIDB", "The data has been written failed", 3) } }, t.prototype.DeleteFromIDB = function () { var t = this, n; if (!this.MyDB) { this.FireEvent(!0, "CDE_NEW_LOGENTRY", "IndexedDB:DeleteFromIDB", "IDB is not ready, yet", 3); return } n = this.MyDB.transaction(["CDEJS"], "readwrite").objectStore("CDEJS").delete(1); n.onsuccess = function () { t.FireEvent(!0, "CDE_NEW_LOGENTRY", "IndexedDB:DeleteFromIDB", "The data has been deleted", 1) } }, t.MsgSendCounter = 0, t }(); n.cdeWorker = r }(cde || (cde = {})); MyWorkerContext.onconnect = function (n) { var t = n.ports[0]; t.addEventListener("message", function (n) { MyWorker.OnMessage(n) }); t.start(); MyWorker ? (MyWorker.AddPort(t), MyWorker.UpdateCallerHSI("startup")) : MyWorker = new cde.cdeWorker(t) };